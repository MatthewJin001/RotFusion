function [R_out,t_out,rnti] =HECWu(A, B)
%
% This function solves the problem AX=XB based on the approximation of
% spatial displacements by double quaternions. This methods is described
% in:
%
% J. Wu, Y. Sun, M. Wang, and M. Liu, "Hand-eye calibration: 4d
% Procrustes analysis approach," IEEE Transactions on Instrumentation
% and Measurement, vol. 69, no. 6, pp. 2966-2981, 2019.
%
% Code from
%        https://github.com/zarathustr/hand_eye_SO4
%
% This code is included just as a reference and not used in our
% paper because it generates too large errors. Such errors can be
% canceled with small modifications (see the function
% B1_Modified_Wu_Sun_Wang_Liu which is the one we actually
% use in our paper).
tic;
  dd = 1e4;
  
  len = size(A,3);
  J = zeros(8, 4);
  
  for i = 1:len
    SA = SE3_SO4(A(:,:,i), dd);
    SB = SE3_SO4(B(:,:,i), dd);
    Ji = Js(SA, SB);
    J = J + Ji/len;
  end
  
  g = [eig4(J(1:4,:)); eig4(J(5:8,:))];
  
  R = [g(1), -g(2), -g(3), -g(4);
       g(2),  g(1), -g(4),  g(3);
       g(3),  g(4),  g(1), -g(2);
       g(4), -g(3),  g(2),  g(1)] * ...
                                    [g(5), -g(6), -g(7), -g(8);
                                    g(6),  g(5),  g(8), -g(7);
                                    g(7), -g(8),  g(5),  g(6);
                                    g(8),  g(7), -g(6),  g(5)];

  t = - R(1 : 3, 4) * dd;
  R = - R(1 : 3, 1 : 3);
  T = [R, t;
       zeros(1, 3), 1];
  R_out=R;
  t_out=t;
  rnti=toc;
end


function [v, lambda] = eig4(A)
  a11 = A(1, 1); a12 = A(1, 2); a13 = A(1, 3); a14 = A(1, 4);
  a22 = A(2, 2); a23 = A(2, 3); a24 = A(2, 4);
  a33 = A(3, 3); a34 = A(3, 4);
  a44 = A(4, 4);
  
  a12_2 = a12 * a12; a13_2 = a13 * a13; a14_2 = a14 * a14;
  a23_2 = a23 * a23; a24_2 = a24 * a24;
  a34_2 = a34 * a34;
  
  tau1 = -a11 - a22 - a33 - a44;
  tau2 = -a12_2 - a13_2 - a14_2 + a11*a22 - a23_2 - a24_2 + a11*a33 + a22*a33 - a34_2 + a11*a44 + a22*a44 + a33*a44;
  tau3 = a13_2*a22 + a14_2*a22 - 2*a12*a13*a23 + a11*a23_2 - ...
         2*a12*a14*a24 + a11*a24_2 + a12_2*a33 + a14_2*a33 - ...
         a11*a22*a33 + a24_2*a33 - 2*a13*a14*a34 - 2*a23*a24*a34 + ...
         a11*a34_2 + a22*a34_2 + a12_2*a44 + a13_2*a44 - ...
         a11*a22*a44 + a23_2*a44 - a11*a33*a44 - a22*a33*a44;
  tau4 = a14_2*a23_2 - 2*a13*a14*a23*a24 + a13_2*a24_2 - ...
         a14_2*a22*a33 + 2*a12*a14*a24*a33 - a11*a24_2*a33 + 2*a13*a14*a22*a34 - ...
         2*a12*a14*a23*a34 - 2*a12*a13*a24*a34 + 2*a11*a23*a24*a34 + ...
         a12_2*a34_2 - a11*a22*a34_2 - a13_2*a22*a44 + ...
         2*a12*a13*a23*a44 - a11*a23_2*a44 - a12_2*a33*a44 + a11*a22*a33*a44;

  tau1_2 = tau1 * tau1;
  a = tau2 - 3 / 8 * tau1_2;
  b = tau3 - tau1 * tau2 / 2 + tau1_2 * tau1 / 8;
  c = tau4 - tau1 * tau3 / 4 + tau1_2 * tau2 / 16 - 3 * tau1_2 * tau1_2 / 256;

  T0 = 2 * a^3 + 27 * b^2 - 72 * a * c;
  theta = atan2(sqrt(4 * (a * a + 12 * c)^3 - T0 * T0), T0);
  aT1 = 1.259921049894873 * sqrt(a * a + 12 * c) * cos(theta / 3);
  T2 = sqrt( - 4 * a + 3.174802103936399 * aT1);
  
  lambda = - 0.204124145231932 * (T2 + sqrt( - T2 * T2 - 12 * a + 29.393876913398135 * b / T2)) - tau1 / 4;

  G11 = A(1, 1) - lambda; G12 = A(1, 2); G13 = A(1, 3); G14 = A(1, 4);
  G22 = A(2, 2) - lambda; G23 = A(2, 3); G24 = A(2, 4);
  G33 = A(3, 3) - lambda; G34 = A(3, 4);

  q = [G14 * G23 * G23 - G13 * G23 * G24 - G14 * G22 * G33 + G12 * G24 * G33 + G13 * G22 * G34 - G12 * G23 * G34;
       G13 * G13 * G24 + G12 * G14 * G33 - G11 * G24 * G33 + G11 * G23 * G34 - G13 * G14 * G23 - G13 * G12 * G34;
       G13 * G14 * G22 - G12 * G14 * G23 - G12 * G13 * G24 + G11 * G23 * G24 + G12 * G12 * G34 - G11 * G22 * G34;
       - (G13 * G13 * G22 - 2 * G12 * G13 * G23 + G11 * G23 * G23 + G12 * G12 * G33 - G11 * G22 * G33)];
  v = q ./ norm(q);
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function J = Js(A, B)
  a11 = A(1, 1); a12 = A(1, 2); a13 = A(1, 3); a14 = A(1, 4);
  a21 = A(2, 1); a22 = A(2, 2); a23 = A(2, 3); a24 = A(2, 4);
  a31 = A(3, 1); a32 = A(3, 2); a33 = A(3, 3); a34 = A(3, 4);
  a41 = A(4, 1); a42 = A(4, 2); a43 = A(4, 3); a44 = A(4, 4);
  b11 = B(1, 1); b12 = B(1, 2); b13 = B(1, 3); b14 = B(1, 4);
  b21 = B(2, 1); b22 = B(2, 2); b23 = B(2, 3); b24 = B(2, 4);
  b31 = B(3, 1); b32 = B(3, 2); b33 = B(3, 3); b34 = B(3, 4);
  b41 = B(4, 1); b42 = B(4, 2); b43 = B(4, 3); b44 = B(4, 4);

  J = [2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 - a12*b12 + a12*b21 - a12*b34 + a12*b43 + 2*a13^2 - a13*b13 + a13*b24 + a13*b31 - a13*b42 + 2*a14^2 - a14*b14 - a14*b23 + a14*b32 + a14*b41 + 2*a21^2 + a21*b12 - a21*b21 + a21*b34 - a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 - a23*b14 - a23*b23 + a23*b32 + a23*b41 + 2*a24^2 + a24*b13 - a24*b24 - a24*b31 + a24*b42 + 2*a31^2 + a31*b13 - a31*b24 - a31*b31 + a31*b42 + 2*a32^2 + a32*b14 + a32*b23 - a32*b32 - a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 - a34*b12 + a34*b21 - a34*b34 + a34*b43 + 2*a41^2 + a41*b14 + a41*b23 - a41*b32 - a41*b41 + 2*a42^2 - a42*b13 + a42*b24 + a42*b31 - a42*b42 + 2*a43^2 + a43*b12 - a43*b21 + a43*b34 - a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*ba13*b14 - a14*b13 + a13*b23 - a23*b13 + a14*b24 - a24*b14 - a13*b32 + a14*b31 - a31*b14 + a32*b13 + a23*b24 - a24*b23 - a13*b41 + a23*b31 - a31*b23 + a41*b13 - a14*b42 + a24*b32 - a32*b24 + a42*b14 + a31*b32 - a32*b31 - a23*b42 + a24*b41 - a41*b24 + a42*b23 + a31*b41 - a41*b31 + a32*b42 - a42*b32 + a41*b42 - a42*ba14*b12 - a12*b14 - a12*b23 - a14*b21 + a21*b14 + a23*b12 + a12*b32 + a21*b23 - a23*b21 - a32*b12 + a14*b34 - a34*b14 + a12*b41 - a21*b32 + a32*b21 - a41*b12 - a14*b43 + a23*b34 - a34*b23 + a43*b14 - a21*b41 + a41*b21 - a23*b43 - a32*b34 + a34*b32 + a43*b23 + a32*b43 + a34*b41 - a41*b34 - a43*b32 + a41*b43 - a43*ba12*b13 - a13*b12 + a13*b21 - a21*b13 - a12*b24 + a24*b12 - a12*b31 + a31*b12 + a21*b24 - a24*b21 - a13*b34 + a34*b13 + a21*b31 - a31*b21 + a12*b42 - a42*b12 + a13*b43 - a43*b13 + a24*b34 - a34*b24 - a21*b42 + a42*b21 + a31*b34 - a34*b31 - a24*b43 + a43*b24 - a31*b43 + a43*b31 + a34*b42 - a42*b34 + a42*b43 - a43*b42;
       a13*b14 - a14*b13 + a13*b23 - a23*b13 + a14*b24 - a24*b14 - a13*b32 + a14*b31 - a31*b14 + a32*b13 + a23*b24 - a24*b23 - a13*b41 + a23*b31 - a31*b23 + a41*b13 - a14*b42 + a24*b32 - a32*b24 + a42*b14 + a31*b32 - a32*b31 - a23*b42 + a24*b41 - a41*b24 + a42*b23 + a31*b41 - a41*b31 + a32*b42 - a42*b32 + a41*b42 - a42*b41, 2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 - a12*b12 + a12*b21 - a12*b34 + a12*b43 + 2*a13^2 + a13*b13 - a13*b24 - a13*b31 + a13*b42 + 2*a14^2 + a14*b14 + a14*b23 - a14*b32 - a14*b41 + 2*a21^2 + a21*b12 - a21*b21 + a21*b34 - a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 + a23*b14 + a23*b23 - a23*b32 - a23*b41 + 2*a24^2 - a24*b13 + a24*b24 + a24*b31 - a24*b42 + 2*a31^2 - a31*b13 + a31*b24 + a31*b31 - a31*b42 + 2*a32^2 - a32*b14 - a32*b23 + a32*b32 + a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 - a34*b12 + a34*b21 - a34*b34 + a34*b43 + 2*a41^2 - a41*b14 - a41*b23 + a41*b32 + a41*b41 + 2*a42^2 + a42*b13 - a42*b24 - a42*b31 + a42*b42 + 2*a43^2 + a43*b12 - a43*b21 + a43*b34 - a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*ba13*b21 - a13*b12 - a12*b13 + a21*b13 + a12*b24 + a24*b12 + a12*b31 + a31*b12 - a21*b24 - a24*b21 - a13*b34 - a34*b13 - a21*b31 - a31*b21 - a12*b42 - a42*b12 + a13*b43 + a43*b13 + a24*b34 + a34*b24 + a21*b42 + a42*b21 + a31*b34 + a34*b31 - a24*b43 - a43*b24 - a31*b43 - a43*b31 - a34*b42 - a42*b34 + a42*b43 + a43*b42,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 a14*b21 - a14*b12 - a12*b23 - a12*b14 + a21*b14 - a23*b12 + a12*b32 + a21*b23 + a23*b21 + a32*b12 - a14*b34 - a34*b14 + a12*b41 - a21*b32 - a32*b21 + a41*b12 + a14*b43 - a23*b34 - a34*b23 + a43*b14 - a21*b41 - a41*b21 + a23*b43 + a32*b34 + a34*b32 + a43*b23 - a32*b43 + a34*b41 + a41*b34 - a43*b32 - a41*b43 - a43*b41;
       a14*b12 - a12*b14 - a12*b23 - a14*b21 + a21*b14 + a23*b12 + a12*b32 + a21*b23 - a23*b21 - a32*b12 + a14*b34 - a34*b14 + a12*b41 - a21*b32 + a32*b21 - a41*b12 - a14*b43 + a23*b34 - a34*b23 + a43*b14 - a21*b41 + a41*b21 - a23*b43 - a32*b34 + a34*b32 + a43*b23 + a32*b43 + a34*b41 - a41*b34 - a43*b32 + a41*b43 - a43*b41,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 a13*b21 - a13*b12 - a12*b13 + a21*b13 + a12*b24 + a24*b12 + a12*b31 + a31*b12 - a21*b24 - a24*b21 - a13*b34 - a34*b13 - a21*b31 - a31*b21 - a12*b42 - a42*b12 + a13*b43 + a43*b13 + a24*b34 + a34*b24 + a21*b42 + a42*b21 + a31*b34 + a34*b31 - a24*b43 - a43*b24 - a31*b43 - a43*b31 - a34*b42 - a42*b34 + a42*b43 + a43*b42, 2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 + a12*b12 - a12*b21 + a12*b34 - a12*b43 + 2*a13^2 - a13*b13 + a13*b24 + a13*b31 - a13*b42 + 2*a14^2 + a14*b14 + a14*b23 - a14*b32 - a14*b41 + 2*a21^2 - a21*b12 + a21*b21 - a21*b34 + a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 + a23*b14 + a23*b23 - a23*b32 - a23*b41 + 2*a24^2 + a24*b13 - a24*b24 - a24*b31 + a24*b42 + 2*a31^2 + a31*b13 - a31*b24 - a31*b31 + a31*b42 + 2*a32^2 - a32*b14 - a32*b23 + a32*b32 + a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 + a34*b12 - a34*b21 + a34*b34 - a34*b43 + 2*a41^2 - a41*b14 - a41*b23 + a41*b32 + a41*b41 + 2*a42^2 - a42*b13 + a42*b24 + a42*b31 - a42*b42 + 2*a43^2 - a43*b12 + a43*b21 - a43*b34 + a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*ba14*b24 - a14*b13 - a13*b23 - a23*b13 - a13*b14 + a24*b14 + a13*b32 + a14*b31 + a31*b14 + a32*b13 + a23*b24 + a24*b23 + a13*b41 + a23*b31 + a31*b23 + a41*b13 - a14*b42 - a24*b32 - a32*b24 - a42*b14 - a31*b32 - a32*b31 - a23*b42 - a24*b41 - a41*b24 - a42*b23 - a31*b41 - a41*b31 + a32*b42 + a42*b32 + a41*b42 + a42*b41;
       a12*b13 - a13*b12 + a13*b21 - a21*b13 - a12*b24 + a24*b12 - a12*b31 + a31*b12 + a21*b24 - a24*b21 - a13*b34 + a34*b13 + a21*b31 - a31*b21 + a12*b42 - a42*b12 + a13*b43 - a43*b13 + a24*b34 - a34*b24 - a21*b42 + a42*b21 + a31*b34 - a34*b31 - a24*b43 + a43*b24 - a31*b43 + a43*b31 + a34*b42 - a42*b34 + a42*b43 - a43*ba14*b21 - a14*b12 - a12*b23 - a12*b14 + a21*b14 - a23*b12 + a12*b32 + a21*b23 + a23*b21 + a32*b12 - a14*b34 - a34*b14 + a12*b41 - a21*b32 - a32*b21 + a41*b12 + a14*b43 - a23*b34 - a34*b23 + a43*b14 - a21*b41 - a41*b21 + a23*b43 + a32*b34 + a34*b32 + a43*b23 - a32*b43 + a34*b41 + a41*b34 - a43*b32 - a41*b43 - a43*ba14*b24 - a14*b13 - a13*b23 - a23*b13 - a13*b14 + a24*b14 + a13*b32 + a14*b31 + a31*b14 + a32*b13 + a23*b24 + a24*b23 + a13*b41 + a23*b31 + a31*b23 + a41*b13 - a14*b42 - a24*b32 - a32*b24 - a42*b14 - a31*b32 - a32*b31 - a23*b42 - a24*b41 - a41*b24 - a42*b23 - a31*b41 - a41*b31 + a32*b42 + a42*b32 + a41*b42 + a42*b41, 2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 + a12*b12 - a12*b21 + a12*b34 - a12*b43 + 2*a13^2 + a13*b13 - a13*b24 - a13*b31 + a13*b42 + 2*a14^2 - a14*b14 - a14*b23 + a14*b32 + a14*b41 + 2*a21^2 - a21*b12 + a21*b21 - a21*b34 + a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 - a23*b14 - a23*b23 + a23*b32 + a23*b41 + 2*a24^2 - a24*b13 + a24*b24 + a24*b31 - a24*b42 + 2*a31^2 - a31*b13 + a31*b24 + a31*b31 - a31*b42 + 2*a32^2 + a32*b14 + a32*b23 - a32*b32 - a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 + a34*b12 - a34*b21 + a34*b34 - a34*b43 + 2*a41^2 + a41*b14 + a41*b23 - a41*b32 - a41*b41 + 2*a42^2 + a42*b13 - a42*b24 - a42*b31 + a42*b42 + 2*a43^2 - a43*b12 + a43*b21 - a43*b34 + a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*b44^2;
       2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 - a12*b12 + a12*b21 + a12*b34 - a12*b43 + 2*a13^2 - a13*b13 - a13*b24 + a13*b31 + a13*b42 + 2*a14^2 - a14*b14 + a14*b23 - a14*b32 + a14*b41 + 2*a21^2 + a21*b12 - a21*b21 - a21*b34 + a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 + a23*b14 - a23*b23 + a23*b32 - a23*b41 + 2*a24^2 - a24*b13 - a24*b24 + a24*b31 + a24*b42 + 2*a31^2 + a31*b13 + a31*b24 - a31*b31 - a31*b42 + 2*a32^2 - a32*b14 + a32*b23 - a32*b32 + a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 + a34*b12 - a34*b21 - a34*b34 + a34*b43 + 2*a41^2 + a41*b14 - a41*b23 + a41*b32 - a41*b41 + 2*a42^2 + a42*b13 + a42*b24 - a42*b31 - a42*b42 + 2*a43^2 - a43*b12 + a43*b21 + a43*b34 - a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*ba14*b13 - a13*b14 + a13*b23 - a23*b13 + a14*b24 - a24*b14 - a13*b32 - a14*b31 + a31*b14 + a32*b13 - a23*b24 + a24*b23 + a13*b41 + a23*b31 - a31*b23 - a41*b13 - a14*b42 - a24*b32 + a32*b24 + a42*b14 + a31*b32 - a32*b31 + a23*b42 + a24*b41 - a41*b24 - a42*b23 - a31*b41 + a41*b31 - a32*b42 + a42*b32 + a41*b42 - a42*ba12*b14 - a14*b12 - a12*b23 + a14*b21 - a21*b14 + a23*b12 + a12*b32 + a21*b23 - a23*b21 - a32*b12 + a14*b34 - a34*b14 - a12*b41 - a21*b32 + a32*b21 + a41*b12 - a14*b43 - a23*b34 + a34*b23 + a43*b14 + a21*b41 - a41*b21 + a23*b43 + a32*b34 - a34*b32 - a43*b23 - a32*b43 + a34*b41 - a41*b34 + a43*b32 + a41*b43 - a43*ba13*b12 - a12*b13 - a13*b21 + a21*b13 - a12*b24 + a24*b12 + a12*b31 - a31*b12 + a21*b24 - a24*b21 - a13*b34 + a34*b13 - a21*b31 + a31*b21 + a12*b42 - a42*b12 + a13*b43 - a43*b13 - a24*b34 + a34*b24 - a21*b42 + a42*b21 + a31*b34 - a34*b31 + a24*b43 - a43*b24 - a31*b43 + a43*b31 - a34*b42 + a42*b34 - a42*b43 + a43*b42;
       a14*b13 - a13*b14 + a13*b23 - a23*b13 + a14*b24 - a24*b14 - a13*b32 - a14*b31 + a31*b14 + a32*b13 - a23*b24 + a24*b23 + a13*b41 + a23*b31 - a31*b23 - a41*b13 - a14*b42 - a24*b32 + a32*b24 + a42*b14 + a31*b32 - a32*b31 + a23*b42 + a24*b41 - a41*b24 - a42*b23 - a31*b41 + a41*b31 - a32*b42 + a42*b32 + a41*b42 - a42*b41, 2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 - a12*b12 + a12*b21 + a12*b34 - a12*b43 + 2*a13^2 + a13*b13 + a13*b24 - a13*b31 - a13*b42 + 2*a14^2 + a14*b14 - a14*b23 + a14*b32 - a14*b41 + 2*a21^2 + a21*b12 - a21*b21 - a21*b34 + a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 - a23*b14 + a23*b23 - a23*b32 + a23*b41 + 2*a24^2 + a24*b13 + a24*b24 - a24*b31 - a24*b42 + 2*a31^2 - a31*b13 - a31*b24 + a31*b31 + a31*b42 + 2*a32^2 + a32*b14 - a32*b23 + a32*b32 - a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 + a34*b12 - a34*b21 - a34*b34 + a34*b43 + 2*a41^2 - a41*b14 + a41*b23 - a41*b32 + a41*b41 + 2*a42^2 - a42*b13 - a42*b24 + a42*b31 + a42*b42 + 2*a43^2 - a43*b12 + a43*b21 + a43*b34 - a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*ba13*b21 - a13*b12 - a12*b13 + a21*b13 - a12*b24 - a24*b12 + a12*b31 + a31*b12 + a21*b24 + a24*b21 + a13*b34 + a34*b13 - a21*b31 - a31*b21 + a12*b42 + a42*b12 - a13*b43 - a43*b13 + a24*b34 + a34*b24 - a21*b42 - a42*b21 - a31*b34 - a34*b31 - a24*b43 - a43*b24 + a31*b43 + a43*b31 - a34*b42 - a42*b34 + a42*b43 + a43*ba12*b23 - a14*b12 - a12*b14 + a14*b21 + a21*b14 + a23*b12 - a12*b32 - a21*b23 - a23*b21 - a32*b12 + a14*b34 + a34*b14 + a12*b41 + a21*b32 + a32*b21 + a41*b12 - a14*b43 - a23*b34 - a34*b23 - a43*b14 - a21*b41 - a41*b21 + a23*b43 + a32*b34 + a34*b32 + a43*b23 - a32*b43 - a34*b41 - a41*b34 - a43*b32 + a41*b43 + a43*b41;
       a12*b14 - a14*b12 - a12*b23 + a14*b21 - a21*b14 + a23*b12 + a12*b32 + a21*b23 - a23*b21 - a32*b12 + a14*b34 - a34*b14 - a12*b41 - a21*b32 + a32*b21 + a41*b12 - a14*b43 - a23*b34 + a34*b23 + a43*b14 + a21*b41 - a41*b21 + a23*b43 + a32*b34 - a34*b32 - a43*b23 - a32*b43 + a34*b41 - a41*b34 + a43*b32 + a41*b43 - a43*ba13*b21 - a13*b12 - a12*b13 + a21*b13 - a12*b24 - a24*b12 + a12*b31 + a31*b12 + a21*b24 + a24*b21 + a13*b34 + a34*b13 - a21*b31 - a31*b21 + a12*b42 + a42*b12 - a13*b43 - a43*b13 + a24*b34 + a34*b24 - a21*b42 - a42*b21 - a31*b34 - a34*b31 - a24*b43 - a43*b24 + a31*b43 + a43*b31 - a34*b42 - a42*b34 + a42*b43 + a43*b42, 2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 + a12*b12 - a12*b21 - a12*b34 + a12*b43 + 2*a13^2 - a13*b13 - a13*b24 + a13*b31 + a13*b42 + 2*a14^2 + a14*b14 - a14*b23 + a14*b32 - a14*b41 + 2*a21^2 - a21*b12 + a21*b21 + a21*b34 - a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 - a23*b14 + a23*b23 - a23*b32 + a23*b41 + 2*a24^2 - a24*b13 - a24*b24 + a24*b31 + a24*b42 + 2*a31^2 + a31*b13 + a31*b24 - a31*b31 - a31*b42 + 2*a32^2 + a32*b14 - a32*b23 + a32*b32 - a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 - a34*b12 + a34*b21 + a34*b34 - a34*b43 + 2*a41^2 - a41*b14 + a41*b23 - a41*b32 + a41*b41 + 2*a42^2 + a42*b13 + a42*b24 - a42*b31 - a42*b42 + 2*a43^2 + a43*b12 - a43*b21 - a43*b34 + a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*ba13*b23 - a14*b13 - a13*b14 + a23*b13 - a14*b24 - a24*b14 - a13*b32 + a14*b31 + a31*b14 - a32*b13 + a23*b24 + a24*b23 + a13*b41 - a23*b31 - a31*b23 + a41*b13 + a14*b42 - a24*b32 - a32*b24 + a42*b14 + a31*b32 + a32*b31 - a23*b42 + a24*b41 + a41*b24 - a42*b23 - a31*b41 - a41*b31 + a32*b42 + a42*b32 - a41*b42 - a42*b41;
       a13*b12 - a12*b13 - a13*b21 + a21*b13 - a12*b24 + a24*b12 + a12*b31 - a31*b12 + a21*b24 - a24*b21 - a13*b34 + a34*b13 - a21*b31 + a31*b21 + a12*b42 - a42*b12 + a13*b43 - a43*b13 - a24*b34 + a34*b24 - a21*b42 + a42*b21 + a31*b34 - a34*b31 + a24*b43 - a43*b24 - a31*b43 + a43*b31 - a34*b42 + a42*b34 - a42*b43 + a43*ba12*b23 - a14*b12 - a12*b14 + a14*b21 + a21*b14 + a23*b12 - a12*b32 - a21*b23 - a23*b21 - a32*b12 + a14*b34 + a34*b14 + a12*b41 + a21*b32 + a32*b21 + a41*b12 - a14*b43 - a23*b34 - a34*b23 - a43*b14 - a21*b41 - a41*b21 + a23*b43 + a32*b34 + a34*b32 + a43*b23 - a32*b43 - a34*b41 - a41*b34 - a43*b32 + a41*b43 + a43*ba13*b23 - a14*b13 - a13*b14 + a23*b13 - a14*b24 - a24*b14 - a13*b32 + a14*b31 + a31*b14 - a32*b13 + a23*b24 + a24*b23 + a13*b41 - a23*b31 - a31*b23 + a41*b13 + a14*b42 - a24*b32 - a32*b24 + a42*b14 + a31*b32 + a32*b31 - a23*b42 + a24*b41 + a41*b24 - a42*b23 - a31*b41 - a41*b31 + a32*b42 + a42*b32 - a41*b42 - a42*b41, 2*a11^2 - a11*b11 - a11*b22 - a11*b33 - a11*b44 + 2*a12^2 + a12*b12 - a12*b21 - a12*b34 + a12*b43 + 2*a13^2 + a13*b13 + a13*b24 - a13*b31 - a13*b42 + 2*a14^2 - a14*b14 + a14*b23 - a14*b32 + a14*b41 + 2*a21^2 - a21*b12 + a21*b21 + a21*b34 - a21*b43 + 2*a22^2 - a22*b11 - a22*b22 - a22*b33 - a22*b44 + 2*a23^2 + a23*b14 - a23*b23 + a23*b32 - a23*b41 + 2*a24^2 + a24*b13 + a24*b24 - a24*b31 - a24*b42 + 2*a31^2 - a31*b13 - a31*b24 + a31*b31 + a31*b42 + 2*a32^2 - a32*b14 + a32*b23 - a32*b32 + a32*b41 + 2*a33^2 - a33*b11 - a33*b22 - a33*b33 - a33*b44 + 2*a34^2 - a34*b12 + a34*b21 + a34*b34 - a34*b43 + 2*a41^2 + a41*b14 - a41*b23 + a41*b32 - a41*b41 + 2*a42^2 - a42*b13 - a42*b24 + a42*b31 + a42*b42 + 2*a43^2 + a43*b12 - a43*b21 - a43*b34 + a43*b43 + 2*a44^2 - a44*b11 - a44*b22 - a44*b33 - a44*b44 + 2*b11^2 + 2*b12^2 + 2*b13^2 + 2*b14^2 + 2*b21^2 + 2*b22^2 + 2*b23^2 + 2*b24^2 + 2*b31^2 + 2*b32^2 + 2*b33^2 + 2*b34^2 + 2*b41^2 + 2*b42^2 + 2*b43^2 + 2*b44^2];
  
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function SA = SE3_SO4(A, dd)
  RA = A(1 : 3, 1 : 3);
  tA = A(1 : 3, 4);
  SA = [RA, tA / dd;
        - tA' * RA / dd, 1];
end

